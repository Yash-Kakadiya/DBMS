--Lab-09-Find, limit, skip and sort method

--Perform following queries using find, limit, skip and sort method.

--Create and Select Database Named: “BANK_INFO”.

use BANK_INFO
db.createCollection("Deposit")
db.Deposit.insertMany([
  {
    "ACTNO":101,"CNAME":"ANIL","BNAME":"CE","AMOUNT":10000,"ADATE":"01-03-1995"
  },
  {
    "ACTNO":102,"CNAME":"SUNIL","BNAME":"CE","AMOUNT":50000,"ADATE":"04-01-1996"
  },
  {
    "ACTNO":103,"CNAME":"MEHUL","BNAME":"IT","AMOUNT":35000,"ADATE":"17-11-1995"
  },
  {
    "ACTNO":104,"CNAME":"MADHURI","BNAME":"IT","AMOUNT":12000,"ADATE":"17-12-1995"
  },
  {
    "ACTNO":105,"CNAME":"PRMOD","BNAME":"CE","AMOUNT":30000,"ADATE":"27-03-1996"
  },
  {
    "ACTNO":106,"CNAME":"SANDIP","BNAME":"CE","AMOUNT":20000,"ADATE":"31-03-1996"
  },
  {
    "ACTNO":107,"CNAME":"SHIVANI","BNAME":"CE","AMOUNT":10000,"ADATE":"05-09-1995"
  },
  {
    "ACTNO":108,"CNAME":"KRANTI","BNAME":"IT","AMOUNT":50000,"ADATE":"02-07-1995"
  }
])

--From the above given collection perform the following queries using find, limit, skip and sort method:

--Part - A

01. Retrieve/Display every document of Deposit collection.

db.Deposit.find().forEach(printjson)

02. Display only one document of Deposit collection. (Use: findOne())

db.Deposit.findOne({ACTNO: 101})

03. Insert following document into Deposit collection. (Use: insertOne())
109 KIRTI VIRAR 3000 3-5-97

db.Deposit.insertOne({"ACTNO":109,"CNAME":"KIRTI","BNAME":"VIRAR","AMOUNT":3000,"ADATE":"03-05-1997"})

04. Insert following documents into Deposit collection. (Use: insertMany())
110 MITALI ANDHERI 4500 4-9-95
111 RAJIV NEHRU PLACE 7000 2-10-98

db.Deposit.insertMany([{"ACTNO":110,"CNAME":"MITALI","BNAME":"ANDHERI","AMOUNT":4500,"ADATE":"04-09-1995"},{"ACTNO":111,"CNAME":"RAJIV","BNAME":"NEHRU PLACE","AMOUNT":7000,"ADATE":"02-10-1998"}])

05. Display all the documents of ‘VIRAR’ branch from Deposit collection.

db.Deposit.findOne({"BNAME":"VIRAR"})

06. Display all the documents of Deposit collection whose amount is between 3000 and 5000.

db.Deposit.find({
    AMOUNT:{ $gte: 3000, $lte: 5000 }
})

07. Display all the documents of Deposit collection whose amount is greater than 2000 and branch is VIRAR.

db.Deposit.find({AMOUNT: { $gt: 2000 },BNAME: "VIRAR"})

08. Display all the documents with CNAME, BNAME and AMOUNT fields from Deposit collection.

db.Deposit.find({},{ CNAME: 1, BNAME: 1, AMOUNT: 1, _id: 0 })

09. Display all the documents of Deposit collection on ascending order by CNAME.

db.Deposit.find().sort({ CNAME: 1 })

10. Display all the documents of Deposit collection on descending order by BNAME.

db.Deposit.find().sort({ CNAME: -1 })

11. Display all the documents of Deposit collection on ascending order by ACTNO and descending order by AMOUNT.

db.Deposit.find().sort({ ACTNO: 1, AMOUNT: -1 })

12. Display only two documents of Deposit collection.

db.Deposit.find().limit(2)

13. Display 3rd document of Deposit collection.

db.Deposit.find().skip(2).limit(1)

14. Display 6th and 7th documents of Deposit collection.

db.Deposit.find().skip(5).limit(2)

15. Display the count of documents in Deposit collection.

db.Deposit.countDocuments()
